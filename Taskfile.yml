version: '3'
env:
  GOBIN: { sh: pwd }

tasks:
  default:
    cmds:
      - task: generate

  github-action:
    cmds:
      - task: test
      - task: lint:files-changed

  build:gowork:
    run: once
    status:
      - test -f ../go.work || test -f go.work
    cmds:
      - go work init
      - go work use -r .

  generate:
    cmds:
      - PATH=$PATH:$GOBIN go run ./cmd/kod generate -s ./... ./tests/...
    sources:
      - "**/**.go"
    deps:
      - task: build:gowork
      - task: mod
      - install:mockgen

  lint:files-changed:
    cmd: |
      git diff --exit-code

  test:
    cmd: |
      PATH=$PATH:$GOBIN GOEXPERIMENT=nocoverageredesign go test -race -cover -coverprofile=coverage.out \
        -covermode=atomic ./... ./tests/... \
        -coverpkg .,./cmd/...,./internal/...,./interceptor/...
    sources:
      - "**/**.go"
    generates:
      - coverage.out
    deps:
      - task: generate

  test:coverage:
    cmd: |
        go tool cover -func=coverage.out
    deps:
      - test

  install:mockgen:
    vars:
      VERSION: 
        sh: |
          cat go.mod|grep go.uber.org/mock |awk -F ' ' '{print $2}'
    status:
      - test -f mockgen
      - go version -m $GOBIN/mockgen | grep go.uber.org/mock | grep {{.VERSION}}
    cmd: |
        go install go.uber.org/mock/mockgen@{{.VERSION}}

  mod:
    cmds:
      - go mod tidy
      - cd tests && go mod tidy
