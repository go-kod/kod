// Code generated by kod struct2interface; DO NOT EDIT.

package case1

import (
	"context"
	"net/http"

	"github.com/gin-gonic/gin"
	"github.com/go-kod/kod/tests/proto/examplev1"
	"github.com/labstack/echo/v4"
)

type test1Controller interface {
}

// serviceImpl is a component that implements testService.
type testService interface {
	Foo(ctx context.Context) error
}

// modelImpl is a component that implements testRepository.
type testRepository interface {
	Foo(ctx context.Context) error
}

// test1Component is a component that implements Test1Component.
type Test1Component interface {
	Foo(ctx context.Context, req *FooReq) (*FooRes, error)
}

// test2Component is a component that implements Test2Component.
type Test2Component interface {
	GetClient() *http.Client
}

// ctxImpl is a component that implements ctxInterface.
type ctxInterface interface {
	// Foo is a http handler
	Foo(ctx context.Context)
}

// testEchoControllerImpl is a component that implements testEchoController.
type testEchoController interface {
	// Hello is a method of testEchoControllerImpl
	Hello(c echo.Context) error
	// Error is a method of testEchoControllerImpl
	Error(c echo.Context) error
}

// testGinControllerImpl is a component that implements testGinController.
type testGinController interface {
	// Hello is a method of testGinControllerImpl
	Hello(c *gin.Context)
}

// httpControllerImpl is a component that implements HTTPController.
type HTTPController interface {
	// Foo is a http handler
	Foo(w http.ResponseWriter, r *http.Request)
}

// protoValidateComponent is a component that implements ProtoValidateComponent.
type ProtoValidateComponent interface {
	Validate(ctx context.Context, req *examplev1.Person) error
}

// panicCase is a component that implements panicCaseInterface.
type panicCaseInterface interface {
	TestPanic(ctx context.Context)
}

// panicNoRecvoeryCase is a component that implements panicNoRecvoeryCaseInterface.
type panicNoRecvoeryCaseInterface interface {
	TestPanic(ctx context.Context)
}
