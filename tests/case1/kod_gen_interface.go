// Code generated by kod struct2interface; DO NOT EDIT.

package case1

import (
	"context"
	"net/http"

	"github.com/gin-gonic/gin"
)

// test1ControllerImpl is a component that implements .
type test1Controller interface {
	// Foo ...
	Foo(cccccc *gin.Context)
	// Foo1 ...
	Foo1(cccccc *gin.Context)
	// Foo2 ...
	Foo2(cccccc *gin.Context)
}

// httpControllerImpl is a component that implements HTTPController.
type HTTPController interface {
	Foo(w http.ResponseWriter, r *http.Request)
}

// serviceImpl is a component that implements testService.
type testService interface {
	Foo(ctx context.Context) error
}

// modelImpl is a component that implements testRepository.
type testRepository interface {
	Foo(ctx context.Context) error
}

// test1Component is a component that implements Test1Component.
type Test1Component interface {
	Foo(ctx context.Context, req *FooReq) (*FooRes, error)
}

// test2Component is a component that implements Test2Component.
type Test2Component interface {
	GetClient() *http.Client
}

// panicCase is a component that implements panicCaseInterface.
type panicCaseInterface interface {
	TestPanic(r *http.Request)
}
